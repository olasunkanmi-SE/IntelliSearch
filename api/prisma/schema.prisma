// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

enum DocumentTypeEnum {
  ARTICLE
  BLOG
  RESEARCH_PAPER
  NEWS
  TWEET
  BOOK
}

enum DomainEnum {
  FINANCE
  HEALTHCARE
  TECHNOLOGY
  SPORTS
  COMPUTER_SCIENCE
}

model Documents {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(255)
  source      String?
  author      String?
  publishedAt DateTime?
  language    String?
  category    String?
  url         String?
  score       Float?
  numTokens   Int?
  createdBy   String?
  updatedBy   String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  deletedAt   DateTime?
  deletedBy   String?
  Embeddings  Embeddings[]
}

model Embeddings {
  id             Int                        @id @default(autoincrement())
  textEmbedding  Unsupported("vector(768)")
  context        String                     @db.Text()
  createdBy      String?
  updatedBy      String?
  createdAt      DateTime                   @default(now())
  updatedAt      DateTime?                  @updatedAt
  deletedAt      DateTime?
  deletedBy      String?
  documentId     Int
  Documents      Documents                  @relation(fields: [documentId], references: [id], onDelete: Cascade)
  DocumentType   DocumentTypes?             @relation(fields: [documentTypeId], references: [id])
  documentTypeId Int
  Domain         Domains?                   @relation(fields: [domainId], references: [id])
  domainId       Int
}

model DocumentTypes {
  id         Int              @id @default(autoincrement())
  name       DocumentTypeEnum
  createdBy  String?
  updatedBy  String?
  createdAt  DateTime         @default(now())
  updatedAt  DateTime?        @updatedAt
  deletedAt  DateTime?
  deletedBy  String?
  embeddings Embeddings[]
}

model Domains {
  id         Int          @id @default(autoincrement())
  name       DomainEnum
  createdBy  String?
  updatedBy  String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt
  deletedAt  DateTime?
  deletedBy  String?
  embeddings Embeddings[]
}
